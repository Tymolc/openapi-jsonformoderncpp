#ifndef DTOGEN_SERIALIZATION_H
#define DTOGEN_SERIALIZATION_H

#include <memory>
#include <optional>

#include "nlohmann/json.hpp"

// TODO: move elsewhere
#ifdef __clang__
#define UNREACHABLE_CODE __builtin_unreachable();
#elif __GNUC__
#define UNREACHABLE_CODE __builtin_unreachable();
#elif _MSC_VER
#define UNREACHABLE_CODE __assume(0);
#endif

// TODO: move elsewhere
#include <stdexcept>
{{#modelNamespaceDeclarations}}
namespace {{this}} {
{{/modelNamespaceDeclarations}}
class invalid_enum_value : public std::runtime_error {
    public:
        using std::runtime_error::runtime_error;
};
{{#modelNamespaceDeclarations}}
}  // namespace {{this}}
{{/modelNamespaceDeclarations}}


namespace nlohmann {

template <typename T>
struct adl_serializer<std::optional<T>> {
    static void to_json(json& j, const std::optional<T>& opt) {
        if (opt == std::nullopt) {
            j = nullptr;
        } else {
            j = *opt;
        }
    }

    static void from_json(const json& j, std::optional<T>& opt) {
        if (j.is_null()) {
            opt = std::nullopt;
        } else {
            opt = j.get<T>();
        }
    }
};

template <typename T>
struct adl_serializer<std::shared_ptr<T>> {
    static void to_json(json& j, const std::shared_ptr<T>& ptr) {
        if (ptr) {
            j = *ptr;
        } else {
            j = nullptr;
        }
    }

    static void from_json(const json& j, std::shared_ptr<T>& ptr) {
        if (j.is_null()) {
            ptr.reset();
        } else {
            ptr = std::make_shared<T>(j.get<T>());
        }
    }
};

}  // namespace nlohmann

{{#modelNamespaceDeclarations}}
namespace {{this}} {
{{/modelNamespaceDeclarations}}
namespace detail {

template <typename T>
void to_optional(const nlohmann::json& j, const char* key, T& target) {
    if (j.contains(key)) {
        j.at(key).get_to(target);
    } else {
        target = std::nullopt;
    }
}

{{#modelNamespaceDeclarations}}
} // namespace {{this}}
{{/modelNamespaceDeclarations}}
} // namespace detail


#endif // DTOGEN_SERIALIZATION_H
